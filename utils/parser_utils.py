import argparse


def get_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('--seed', default=0, type=int)
    parser.add_argument('--dataset', default='nyu')
    parser.add_argument('--phase', default='train')
    parser.add_argument('--split', default=1, type=int,
                        help='Divide the train dataset into s parts, each as an epoch.')
    parser.add_argument('--batch_size', default=16, type=int)
    parser.add_argument('--num_epoch', default=20, type=int)
    parser.add_argument('--gpus', type=int, nargs='+')
    parser.add_argument('--optim', default='Adam', help="Must be Adam or SGD.")
    parser.add_argument('--fixed_gen_net', default=True, type=bool)
    parser.add_argument('--learning_rate', default=0.001, type=float)
    parser.add_argument('--model_saved_path', default='./checkpoint/base')
    parser.add_argument('--pre_model_name', default=None)
    parser.add_argument('--log_dir', default='./logs/base')
    parser.add_argument('--resume_training', default=False, type=bool,
                        help='If resume_training is False, log dir will not be remove.')
    parser.add_argument('--learning_decay_rate', default=0.8, help='Learning decay rate each epoch.')
    parser.add_argument('--reg_weight', default=0.001, type=float, help="Regularization weight.")
    parser.add_argument('--nstack', default=2, type=int, help="The number of stacked hourglass network.")
    parser.add_argument('--hourglass_features', default=128, type=int,
                        help="The number of features of stacked hourglass network.")
    parser.add_argument('--dropout_rate', default=0.5, type=float)
    parser.add_argument('--level', default=3, type=int,
                        help='Specify the number of virtual views. '
                             'Levels 1, 2, 3, 4 have 3, 9, 15 and 25 views, respectively.')
    parser.add_argument('--random_sample', default=False, type=bool)
    parser.add_argument('--num_worker', default=4, type=int, help="Number worker of Dataloader.")
    parser.add_argument('--noise_sigma', default=10., type=float, help="Sigma of Gaussian noise.")
    parser.add_argument('--max_jitter', default=10., type=float, help="Sigma of jittering center of mass.")
    parser.add_argument('--depth_sigma', default=1., type=float, help="Sigma of jittering depth of pixel.")
    parser.add_argument('--cube_len', default=None, type=float)
    parser.add_argument('--min_scale', default=1., type=float)
    parser.add_argument('--max_scale', default=1., type=float)
    parser.add_argument('--offset', default=20., type=float, help="Offset of bounding box.")
    parser.add_argument('--hand_thickness', default=20., type=float)
    parser.add_argument('--random_flip', default=False, type=bool, help="Whether flip image randomly.")
    parser.add_argument('--random_rotate', default=False, type=bool, help="Whether rotate image randomly.")
    parser.add_argument('--use_joint', default=False, type=bool)
    parser.add_argument('--save_result', default=False, type=bool)
    parser.add_argument('--config', default='./config/nyu/train_pc_net.yaml')
    return parser


def get_view_select_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('--seed', default=0, type=int)
    parser.add_argument('--phase', default='train')
    parser.add_argument('--dataset', default='nyu')
    parser.add_argument('--num_epoch', default=20, type=int)
    parser.add_argument('--batch_size', default=16, type=int)
    parser.add_argument('--learning_rate', default=0.001, type=float)
    parser.add_argument('--split', default=1, type=int,
                        help='Divide the train dataset into s parts, each as an epoch.')
    parser.add_argument('--gpus', type=int, nargs='+')
    parser.add_argument('--log_dir', default='./logs/base')
    parser.add_argument('--model_saved_path', default='./checkpoint/base')
    parser.add_argument('--pre_pose_predictor', default='./checkpoint/nyu/pc_net/model.pth')
    parser.add_argument('--pre_wls', default='./checkpoint/nyu/wls/model.pth')
    parser.add_argument('--pre_model_path', default=None)
    parser.add_argument('--resume_training', default=False, type=bool,
                        help='If resume_training is False, log dir will not be remove.')
    parser.add_argument('--reg_weight', default=0.001, type=float, help="Regularization weight.")
    parser.add_argument('--learning_decay_rate', default=0.8, help='Learning decay rate each epoch.')
    parser.add_argument('--d_feature', default=16, type=int)
    parser.add_argument('--level', default=5, type=int,
                        help='Specify the number of virtual views. '
                             'Levels 1, 2, 3, 4, 5 have 3, 9, 15, 25, 81 views, respectively.')
    parser.add_argument('--n_head', default=1, type=int)
    parser.add_argument('--d_attn', default=256, type=int)
    parser.add_argument('--d_k', default=64, type=int)
    parser.add_argument('--d_v', default=64, type=int)
    parser.add_argument('--d_inner', default=256, type=int)
    parser.add_argument('--nstack', default=2, type=int, help="The number of stacked hourglass network.")
    parser.add_argument('--hourglass_features', default=256, type=int,
                        help="The number of features of stacked hourglass network.")
    parser.add_argument('--light_nstack', default=1, type=int)
    parser.add_argument('--light_hourglass_features', default=128, type=int,
                        help="The number of features of stacked hourglass network.")
    parser.add_argument('--dropout_rate', default=0.5, type=float)
    parser.add_argument('--num_select', default=15, type=float)
    parser.add_argument('--threshold', default=0.04, type=float)
    parser.add_argument('--alpha', default=0.5, type=float)
    parser.add_argument('--num_worker', default=4, type=int, help="Number worker of Dataloader.")
    parser.add_argument('--noise_sigma', default=10., type=float, help="Sigma of Gaussian noise.")
    parser.add_argument('--max_jitter', default=10., type=float, help="Sigma of jittering center of mass.")
    parser.add_argument('--depth_sigma', default=1., type=float, help="Sigma of jittering depth of pixel.")
    parser.add_argument('--cube_len', default=None, type=float)
    parser.add_argument('--min_scale', default=1., type=float)
    parser.add_argument('--max_scale', default=1., type=float)
    parser.add_argument('--offset', default=20., type=float, help="Offset of bounding box.")
    parser.add_argument('--hand_thickness', default=20., type=float)
    parser.add_argument('--random_flip', default=False, type=bool, help="Whether flip image randomly.")
    parser.add_argument('--use_joint', default=False, type=bool)
    parser.add_argument('--save_result', default=False, type=bool)
    parser.add_argument('--config', default='./config/nyu/train_pc_net.yaml')
    return parser


def get_view_select2_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('--seed', default=0, type=int)
    parser.add_argument('--phase', default='train')
    parser.add_argument('--dataset', default='nyu')
    parser.add_argument('--num_epoch', default=20, type=int)
    parser.add_argument('--batch_size', default=16, type=int)
    parser.add_argument('--learning_rate_max', default=0.001, type=float)
    parser.add_argument('--learning_rate_min', default=0.00001, type=float)
    parser.add_argument('--T_max', default=5, type=int, help='Maximum number of iterations.')
    parser.add_argument('--split', default=1, type=int,
                        help='Divide the train dataset into s parts, each as an epoch.')
    parser.add_argument('--gpus', type=int, nargs='+')
    parser.add_argument('--log_dir', default='./logs/base')
    parser.add_argument('--model_saved_path', default='./checkpoint/base')
    parser.add_argument('--pre_pose_predictor', default='./checkpoint/nyu/pc_net/model.pth')
    parser.add_argument('--pre_wls', default='./checkpoint/nyu/wls/model.pth')
    parser.add_argument('--pre_model_path', default=None)
    parser.add_argument('--resume_training', default=False, type=bool,
                        help='If resume_training is False, log dir will not be remove.')
    parser.add_argument('--reg_weight', default=0.001, type=float, help="Regularization weight.")
    parser.add_argument('--nstack', default=2, type=int, help="The number of stacked hourglass network.")
    parser.add_argument('--hourglass_features', default=256, type=int,
                        help="The number of features of stacked hourglass network.")
    parser.add_argument('--level', default=5, type=int,
                        help='Specify the number of virtual views. '
                             'Levels 1, 2, 3, 4, 5 have 3, 9, 15, 25, 81 views, respectively.')
    parser.add_argument('--d_feature', default=16, type=int)
    parser.add_argument('--dropout_rate', default=0.5, type=float)
    parser.add_argument('--num_select', default=15, type=float)
    parser.add_argument('--num_worker', default=4, type=int, help="Number worker of Dataloader.")
    parser.add_argument('--max_jitter', default=10., type=float, help="Sigma of jittering center of mass.")
    parser.add_argument('--depth_sigma', default=1., type=float, help="Sigma of jittering depth of pixel.")
    parser.add_argument('--cube_len', default=None, type=float)
    parser.add_argument('--min_scale', default=1., type=float)
    parser.add_argument('--max_scale', default=1., type=float)
    parser.add_argument('--offset', default=20., type=float, help="Offset of bounding box.")
    parser.add_argument('--hand_thickness', default=20., type=float)
    parser.add_argument('--random_flip', default=False, type=bool, help="Whether flip image randomly.")
    parser.add_argument('--voxel_len', default=32, type=int)
    parser.add_argument('--use_joint', default=False, type=bool)
    parser.add_argument('--save_result', default=False, type=bool)
    parser.add_argument('--config', default='./config/nyu/train_pc_net.yaml')
    return parser


def get_wls_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('--seed', default=0, type=int)
    parser.add_argument('--phase', default='train')
    parser.add_argument('--dataset', default='nyu')
    parser.add_argument('--num_epoch', default=20, type=int)
    parser.add_argument('--batch_size', default=16, type=int)
    parser.add_argument('--learning_rate', default=0.001, type=float)
    parser.add_argument('--split', default=1, type=int,
                        help='Divide the train dataset into s parts, each as an epoch.')
    parser.add_argument('--gpus', type=int, nargs='+')
    parser.add_argument('--log_dir', default='./logs/base')
    parser.add_argument('--model_saved_path', default='./checkpoint/base')
    parser.add_argument('--pre_pose_predictor', default='./checkpoint/model.pth')
    parser.add_argument('--pre_wls', default=None)
    parser.add_argument('--resume_training', default=False, type=bool,
                        help='If resume_training is False, log dir will not be remove.')
    parser.add_argument('--reg_weight', default=0.001, type=float, help="Regularization weight.")
    parser.add_argument('--learning_decay_rate', default=0.8, help='Learning decay rate each epoch.')
    parser.add_argument('--d_feature', default=16, type=int)
    parser.add_argument('--level', default=5, type=int,
                        help='Specify the number of virtual views. '
                             'Levels 1, 2, 3, 4, 5 have 3, 9, 15, 25, 81 views, respectively.')
    parser.add_argument('--random_sample', default=False, type=bool)
    parser.add_argument('--n_head', default=1, type=int)
    parser.add_argument('--d_attn', default=256, type=int)
    parser.add_argument('--d_k', default=64, type=int)
    parser.add_argument('--d_v', default=64, type=int)
    parser.add_argument('--d_inner', default=256, type=int)
    parser.add_argument('--dropout_rate', default=0.5, type=float)
    parser.add_argument('--nstack', default=2, type=int, help="The number of stacked hourglass network.")
    parser.add_argument('--hourglass_features', default=128, type=int,
                        help="The number of features of stacked hourglass network.")
    parser.add_argument('--num_worker', default=4, type=int, help="Number worker of Dataloader.")
    parser.add_argument('--noise_sigma', default=10., type=float, help="Sigma of Gaussian noise.")
    parser.add_argument('--max_jitter', default=10., type=float, help="Sigma of jittering center of mass.")
    parser.add_argument('--depth_sigma', default=1., type=float, help="Sigma of jittering depth of pixel.")
    parser.add_argument('--cube_len', default=None, type=float)
    parser.add_argument('--min_scale', default=1., type=float)
    parser.add_argument('--max_scale', default=1., type=float)
    parser.add_argument('--offset', default=20., type=float, help="Offset of bounding box.")
    parser.add_argument('--hand_thickness', default=20., type=float)
    parser.add_argument('--random_flip', default=False, type=bool, help="Whether flip image randomly.")
    parser.add_argument('--random_rotate', default=False, type=bool, help="Whether rotate image randomly.")
    parser.add_argument('--use_joint', default=False, type=bool)
    parser.add_argument('--save_result', default=False, type=bool)
    parser.add_argument('--config', default='./config/nyu/train_wls.yaml')
    return parser

def get_a2j_conf_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('--seed', default=0, type=int)
    parser.add_argument('--phase', default='train')
    parser.add_argument('--dataset', default='nyu')
    parser.add_argument('--num_epoch', default=20, type=int)
    parser.add_argument('--batch_size', default=16, type=int)
    parser.add_argument('--learning_rate', default=0.001, type=float)
    parser.add_argument('--split', default=1, type=int,
                        help='Divide the train dataset into s parts, each as an epoch.')
    parser.add_argument('--gpus', type=int, nargs='+')
    parser.add_argument('--log_dir', default='./logs/base')
    parser.add_argument('--model_saved_path', default='./checkpoint/base')
    parser.add_argument('--pre_a2j', default='./checkpoint/model.pth')
    parser.add_argument('--pre_conf', default=None)
    parser.add_argument('--resume_training', default=False, type=bool,
                        help='If resume_training is False, log dir will not be remove.')
    parser.add_argument('--reg_weight', default=0.001, type=float, help="Regularization weight.")
    parser.add_argument('--learning_decay_rate', default=0.8, help='Learning decay rate each epoch.')
    parser.add_argument('--level', default=5, type=int,
                        help='Specify the number of virtual views. '
                             'Levels 1, 2, 3, 4, 5 have 3, 9, 15, 25, 81 views, respectively.')
    parser.add_argument('--random_sample', default=False, type=bool)
    parser.add_argument('--n_head', default=1, type=int)
    parser.add_argument('--d_attn', default=256, type=int)
    parser.add_argument('--d_k', default=64, type=int)
    parser.add_argument('--d_v', default=64, type=int)
    parser.add_argument('--d_inner', default=256, type=int)
    parser.add_argument('--dropout_rate', default=0.5, type=float)
    parser.add_argument('--num_worker', default=4, type=int, help="Number worker of Dataloader.")
    parser.add_argument('--max_jitter', default=10., type=float, help="Sigma of jittering center of mass.")
    parser.add_argument('--depth_sigma', default=1., type=float, help="Sigma of jittering depth of pixel.")
    parser.add_argument('--cube_len', default=None, type=float)
    parser.add_argument('--min_scale', default=1., type=float)
    parser.add_argument('--max_scale', default=1., type=float)
    parser.add_argument('--offset', default=20., type=float, help="Offset of bounding box.")
    parser.add_argument('--hand_thickness', default=20., type=float)
    parser.add_argument('--random_flip', default=False, type=bool, help="Whether flip image randomly.")
    parser.add_argument('--random_rotate', default=False, type=bool, help="Whether rotate image randomly.")
    parser.add_argument('--use_joint', default=False, type=bool)
    parser.add_argument('--save_result', default=False, type=bool)
    parser.add_argument('--config', default='./config/nyu/train_a2j_conf.yaml')
    return parser


def get_mask_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('--seed', default=0, type=int)
    parser.add_argument('--phase', default='train')
    parser.add_argument('--dataset', default='nyu')
    parser.add_argument('--num_epoch', default=20, type=int)
    parser.add_argument('--batch_size', default=16, type=int)
    parser.add_argument('--learning_rate', default=0.001, type=float)
    parser.add_argument('--split', default=1, type=int,
                        help='Divide the train dataset into s parts, each as an epoch.')
    parser.add_argument('--gpus', type=int, nargs='+')
    parser.add_argument('--log_dir', default='./logs/base')
    parser.add_argument('--model_saved_path', default='./checkpoint/base')
    parser.add_argument('--pre_model_name', default=None)
    parser.add_argument('--resume_training', default=False, type=bool,
                        help='If resume_training is False, log dir will not be remove.')
    parser.add_argument('--reg_weight', default=0.001, type=float, help="Regularization weight.")
    parser.add_argument('--learning_decay_rate', default=0.8, help='Learning decay rate each epoch.')
    parser.add_argument('--backbone', default='vgg11')
    parser.add_argument('--num_worker', default=4, type=int, help="Number worker of Dataloader.")
    parser.add_argument('--offset', default=20., type=float, help="Offset of bounding box.")
    parser.add_argument('--config', default='./config/nyu/train_mask.yaml')
    return parser


def get_a2j_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('--seed', default=0, type=int)
    parser.add_argument('--dataset', default='nyu')
    parser.add_argument('--phase', default='train')
    parser.add_argument('--split', default=1, type=int,
                        help='Divide the train dataset into s parts, each as an epoch.')
    parser.add_argument('--batch_size', default=16, type=int)
    parser.add_argument('--num_epoch', default=20, type=int)
    parser.add_argument('--gpus', type=int, nargs='+')
    parser.add_argument('--optim', default='Adam', help="Must be Adam or SGD.")
    parser.add_argument('--learning_rate', default=0.001, type=float)
    parser.add_argument('--model_saved_path', default='./checkpoint/base')
    parser.add_argument('--pre_model_name', default=None)
    parser.add_argument('--log_dir', default='./logs/base')
    parser.add_argument('--resume_training', default=False, type=bool,
                        help='If resume_training is False, log dir will not be remove.')
    parser.add_argument('--learning_decay_rate', default=0.8, help='Learning decay rate each epoch.')
    parser.add_argument('--reg_weight', default=0.001, type=float, help="Regularization weight.")
    parser.add_argument('--level', default=3, type=int,
                        help='Specify the number of virtual views. '
                             'Levels 1, 2, 3, 4 have 3, 9, 15 and 25 views, respectively.')
    parser.add_argument('--n_head', default=1, type=int)
    parser.add_argument('--d_attn', default=256, type=int)
    parser.add_argument('--d_k', default=64, type=int)
    parser.add_argument('--d_v', default=64, type=int)
    parser.add_argument('--d_inner', default=256, type=int)
    parser.add_argument('--dropout_rate', default=0.5, type=float)
    parser.add_argument('--num_select', default=3, type=int)
    parser.add_argument('--reg_factor', default=3., type=float)
    parser.add_argument('--conf_factor', default=0.1, type=float)
    parser.add_argument('--use_conf', default=True, type=bool)
    parser.add_argument('--random_select', default=False, type=bool)
    parser.add_argument('--random_sample', default=False, type=bool)
    parser.add_argument('--num_worker', default=4, type=int, help="Number worker of Dataloader.")
    parser.add_argument('--max_jitter', default=10., type=float, help="Sigma of jittering center of mass.")
    parser.add_argument('--depth_sigma', default=1., type=float, help="Sigma of jittering depth of pixel.")
    parser.add_argument('--cube_len', default=None, type=float)
    parser.add_argument('--min_scale', default=1., type=float)
    parser.add_argument('--max_scale', default=1., type=float)
    parser.add_argument('--offset', default=20., type=float, help="Offset of bounding box.")
    parser.add_argument('--hand_thickness', default=20., type=float)
    parser.add_argument('--random_flip', default=False, type=bool, help="Whether flip image randomly.")
    parser.add_argument('--save_result', default=False, type=bool)
    parser.add_argument('--use_joint', default=False, type=bool)
    parser.add_argument('--adjust_cube', default=False, type=bool)
    parser.add_argument('--config', default='./config/nyu/train_a2j.yaml')
    return parser


def get_view_a2j_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('--seed', default=0, type=int)
    parser.add_argument('--dataset', default='nyu')
    parser.add_argument('--phase', default='train')
    parser.add_argument('--split', default=1, type=int,
                        help='Divide the train dataset into s parts, each as an epoch.')
    parser.add_argument('--batch_size', default=16, type=int)
    parser.add_argument('--num_epoch', default=20, type=int)
    parser.add_argument('--gpus', type=int, nargs='+')
    parser.add_argument('--optim', default='Adam', help="Must be Adam or SGD.")
    parser.add_argument('--learning_rate', default=0.001, type=float)
    parser.add_argument('--model_saved_path', default='./checkpoint/base')
    parser.add_argument('--pre_a2j', default=None)
    parser.add_argument('--pre_model_path', default=None)
    parser.add_argument('--log_dir', default='./logs/base')
    parser.add_argument('--resume_training', default=False, type=bool,
                        help='If resume_training is False, log dir will not be remove.')
    parser.add_argument('--learning_decay_rate', default=0.8, help='Learning decay rate each epoch.')
    parser.add_argument('--reg_weight', default=0.001, type=float, help="Regularization weight.")
    parser.add_argument('--level', default=3, type=int,
                        help='Specify the number of virtual views. '
                             'Levels 1, 2, 3, 4 have 3, 9, 15 and 25 views, respectively.')
    parser.add_argument('--n_head', default=1, type=int)
    parser.add_argument('--d_attn', default=256, type=int)
    parser.add_argument('--d_k', default=64, type=int)
    parser.add_argument('--d_v', default=64, type=int)
    parser.add_argument('--d_inner', default=256, type=int)
    parser.add_argument('--dropout_rate', default=0.5, type=float)
    parser.add_argument('--num_select', default=3, type=int)
    parser.add_argument('--alpha', default=0.5, type=float)
    parser.add_argument('--conf_factor', default=100., type=float)
    parser.add_argument('--random_select', default=False, type=bool)
    parser.add_argument('--num_worker', default=4, type=int, help="Number worker of Dataloader.")
    parser.add_argument('--max_jitter', default=10., type=float, help="Sigma of jittering center of mass.")
    parser.add_argument('--depth_sigma', default=1., type=float, help="Sigma of jittering depth of pixel.")
    parser.add_argument('--cube_len', default=None, type=float)
    parser.add_argument('--min_scale', default=1., type=float)
    parser.add_argument('--max_scale', default=1., type=float)
    parser.add_argument('--offset', default=20., type=float, help="Offset of bounding box.")
    parser.add_argument('--hand_thickness', default=20., type=float)
    parser.add_argument('--random_flip', default=False, type=bool, help="Whether flip image randomly.")
    parser.add_argument('--save_result', default=False, type=bool)
    parser.add_argument('--use_joint', default=False, type=bool)
    parser.add_argument('--adjust_cube', default=False, type=bool)
    parser.add_argument('--config', default='./config/nyu/train_a2j.yaml')
    return parser